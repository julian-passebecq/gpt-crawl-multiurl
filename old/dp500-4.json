[
  {
    "title": "Create calculation groups in a model - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-calculation-groups/4-model",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nLearn  Training  Browse  Design and build tabular models  Create calculation groups \nAdd\nPrevious\nUnit 4 of 7\nNext\nCreate calculation groups in a model\nCompleted\n100 XP\n3 minutes\n\nUsing calculation groups requires a baseline knowledge of DAX and filter context. This unit describes the application of calculation groups in a Power BI data model using Tabular Editor.\n\nInstall Tabular Editor\n\nApplication of calculation groups can't be accomplished in Power BI desktop. Download the open-source Tabular Editor 2.x tool to apply calculation groups.\n\nWith Tabular Editor installed, you can access it from the external tools tab of the ribbon in Power BI.\n\nLaunching Tabular Editor from the External Tools tab of the ribbon will open the Tabular Editor interface, with a connection to your Power BI data model.\n\nIn the screenshot below, Tabular Editor was launched from the Adventure Works DW 2020 Power BI report.\n\n Note\n\nLearn more about external tools in Power BI Desktop.\n\nCreate calculation group and items\n\nUse the Tabular Editor interface to create calculation groups and calculation items within those groups.\n\nApply a calculation group\n\nSaving the calculation group in Tabular Editor will save changes to the connected data model. To apply those changes, you must refresh the calculation group query in Power BI desktop.\n\n Note\n\nCalculation groups do not work with implicit measures. Measures to be evaluated by the calculation group must be explicitly defined.\n\nUse your calculation group in a visual\n\nYou can now add your calculation group to a visual. A simple way to visualize your calculation group is to drop the calculation group into the columns field of a matrix visual. This will apply the calculation group to the measure you've placed in the values field.\n\nNext unit: Exercise: Create calculation groups\n\nContinue\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Understand calculation groups - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-calculation-groups/2-understand",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nUnderstand calculation groups\n3 minutes\n\nCalculation groups are a simple way to reduce the number of measures in a model by grouping common measure expressions. Calculation groups work with existing explicit DAX measures by automating repetitive patterns.\n\nCalculation groups can be created for tabular models in SQL Server 2019 and later, Analysis Services, Azure Analysis Services, and Power BI.\n\nThe matrix below contains three measures: Orders, Sales, and Profit. Using a calculation group enables you to create two calculation items, Previous Year and Year over Year, which are then applied to each of our three existing measures.\n\nHow to create calculation groups\n\nThe recommended tool for creating calculation groups in Power BI is the free, open-source Tabular Editor 2.x tool. Tabular Editor 2.x lets you manipulate and manage measures, calculated columns, display folders, perspectives, and translations in Analysis Services Tabular and Power BI XMLA Models (from Compatibility Level 1200 and onwards). Power BI Desktop doesn't have the user interface to create calculation groups.\n\nCalculation groups are also supported in Visual Studio with Analysis Services Projects VSIX update 2.9.2 and later.\n\n Note\n\nTo understand more see Calculation groups in analysis services models.\n\nBenefits of using a calculation group\n\nThe main benefit of using calculation groups is a reduction in the overall number of measures you need to create and maintain.\n\nCalculation groups also enable the creation of creative report features, such as switching measures using a slicer, dynamic formatting, and even turning display labels on and off.\n\nLimitations of using a calculation group\n\nThe main limitation of using calculation groups is that implicit measures are no longer supported in your report. If you're used to using implicit measures to quickly cross-check calculations, note that implementing calculation groups will require the creation of explicit measures.\n\n Tip\n\nImplicit measures are automatically generated calculations, achieved by configuring a Power BI visual to summarize column values. Explicit measures are calculations added to a tabular model using a DAX formula.\n\nRefer to calculation groups documentation to read more about limitations.\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Introduction - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-calculation-groups/1-introduction",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nIntroduction\n3 minutes\n\nDesigning Power BI reports to meet the needs of users can be a challenge, requiring many different calculations and the ability to evaluate each of those calculations in multiple time periods.\n\nFor example, the sales manager at Contoso wants to understand sales trends for the year. They've asked you to create multiple measures (orders, sales, and profit) for several time slices, such as month to date, quarter to date, year to date, and previous year. After jumping in and starting to create measures for each metric for each time slice, you realize what a large amount of work this is going to be! Calculation groups are the best way to achieve this kind of a task without increasing the model’s complexity.\n\nLearning objectives\n\nIn this module, you will:\n\nExplore how calculation groups work.\nMaintain calculation groups in a model.\nUse calculation groups in a Power BI report.\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Create calculation groups - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-calculation-groups/",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nCreate calculation groups\nModule\n7 Units\nFeedback\nIntermediate\nData Analyst\nData Engineer\nPower BI\n\nIn this module you’ll learn what calculation groups are, explore key features and usage scenarios, and learn to create calculation groups.\n\nLearning objectives\n\nAfter completing this module, you will be able to:\n\nExplore how calculation groups work.\nMaintain calculation groups in a model.\nUse calculation groups in a Power BI report.\nAdd\nPrerequisites\nExperience creating reports using Power BI desktop.\nBasic understanding of Tabular Editor 2.\nProficient with Data Analysis Expressions (DAX) in tabular models, at a basic level.\nIntroduction\nmin\nUnderstand calculation groups\nmin\nExplore calculation groups features and usage\nmin\nCreate calculation groups in a model\nmin\nExercise: Create calculation groups\nmin\nKnowledge check\nmin\nSummary\nmin\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Exercise - Create Advanced DAX Calculations in Power BI Desktop - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/3b-lab?launch-lab=true",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nExercise - Create Advanced DAX Calculations in Power BI Desktop\n45 minutes\nAccess your environment\n\nBefore you start this lab (unless you are continuing from a previous lab), select Launch lab above.\n\nYou are automatically logged in to your lab environment as data-ai\\student.\n\nYou can now begin your work on this lab.\n\n Tip\n\nTo dock the lab environment so that it fills the window, select the PC icon at the top and then select Fit Window to Machine.\n\nExercise story\n\nIn this exercise, you’ll create measures with DAX expressions involving filter context manipulation.\n\nIn this exercise you learn how to:\n\nUse the CALCULATE() function to manipulate filter context\nUse Time Intelligence functions\n\nThis exercise should take approximately 45 minutes.\n\n Note\n\nA limited number of concurrent sessions are available - if the hosted environment is unavailable, try again later.\n\nUse your own device\n\nAlternatively, configure your environment with the setup instructions.\n\nThen follow these exercise instructions to complete the exercise.\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "dax-matrix-revenue-yoy-ssm.png (460×566)",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/media/dax-matrix-revenue-yoy-ssm.png#lightbox",
    "html": ""
  },
  {
    "title": "dax-matrix-revenue-py-ssm.png (480×567)",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/media/dax-matrix-revenue-py-ssm.png#lightbox",
    "html": ""
  },
  {
    "title": "dax-matrix-revenue-ytd-activity-ssm.png (367×313)",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/media/dax-matrix-revenue-ytd-activity-ssm.png#lightbox",
    "html": ""
  },
  {
    "title": "dax-matrix-mountain-200-bike-stock-2020-june-ssm.png (314×242)",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/media/dax-matrix-mountain-200-bike-stock-2020-june-ssm.png#lightbox",
    "html": ""
  },
  {
    "title": "dax-matrix-mountain-200-bike-stock-2-ss.png (1096×240)",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/media/dax-matrix-mountain-200-bike-stock-2-ss.png#lightbox",
    "html": ""
  },
  {
    "title": "dax-matrix-mountain-200-bike-stock-1-ss.png (1098×244)",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/media/dax-matrix-mountain-200-bike-stock-1-ss.png#lightbox",
    "html": ""
  },
  {
    "title": "dax-model-diagram-inventory-ss.png (532×462)",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/media/dax-model-diagram-inventory-ss.png#lightbox",
    "html": ""
  },
  {
    "title": "Summary - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/5-summary",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nSummary\n5 minutes\n\nIn this module, you learned that time intelligence calculations are concerned with modifying the filter context for date filters. You were introduced to many DAX time intelligence functions, which support the creation of calculations, such as year-to-date (YTD) or year-over-year (YoY). You also learned that life-to-date (LTD) calculations can help you count new occurrences over your fact data, and that snapshot data can be filtered in a way to help guarantee that only a single snapshot value is returned.\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "dax-matrix-new-customers-ssm.png (568×313)",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/media/dax-matrix-new-customers-ssm.png#lightbox",
    "html": ""
  },
  {
    "title": "dax-matrix-customers-ltd-ssm.png (557×312)",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/media/dax-matrix-customers-ltd-ssm.png#lightbox",
    "html": ""
  },
  {
    "title": "dax-matrix-revenue-ytd-ss.png (373×387)",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/media/dax-matrix-revenue-ytd-ss.png#lightbox",
    "html": ""
  },
  {
    "title": "Check your knowledge - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/4-check",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nCheck your knowledge\n3 minutes\nAnswer the following questions to see what you've learned.\n1. \n\nIn the context of semantic model calculations, which statement best describes time intelligence?\n\n \n\nSnapshot balance reporting\n\nFilter context modifications involving a date table\n\nComplex calculations involving time\n\nCalculations involving hours, minutes, or seconds\n\n2. \n\nYou're developing a semantic model in Power BI Desktop. You've just added a date table by using the CALENDARAUTO function. You've extended it with calculated columns, and you've related it to other model tables. What else should you do to ensure that DAX time intelligence calculations work correctly?\n\n \n\nAdd time intelligence measures to the date table.\n\nMark as a Date table.\n\nAdd a fiscal hierarchy.\n\nAdd a date column.\n\n3. \n\nYou have a table that stores account balance snapshots for each date, excluding weekends. You need to ensure that your measure formula only filters by a single date. Also, if no record is on the last date of a time period, it should use the latest account balance. Which DAX time intelligence function should you use?\n\n \n\nFIRST\n\nFIRSTNONBLANK\n\nLAST\n\nLASTNONBLANK\n\nCheck your answers\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Exercise - Create Advanced DAX Calculations in Power BI Desktop - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/3b-lab",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nLearn  Training  Browse  Use DAX time intelligence functions in Power BI Desktop models \nAdd\nPrevious\nUnit 4 of 6\nNext\nExercise - Create Advanced DAX Calculations in Power BI Desktop\nCompleted\n100 XP\n45 minutes\n\nThis unit includes a lab to complete.\n\nUse the free resources provided in the lab to complete the exercises in this unit. You will not be charged for the lab environment; however, you may need to bring your own subscription depending on the lab.\n\nMicrosoft provides this lab experience and related content for educational purposes. All presented information is owned by Microsoft and intended solely for learning about the covered products and services in this Microsoft Learn module.\n\nSign in to launch the lab\n\nAccess your environment\n\nBefore you start this lab (unless you are continuing from a previous lab), select Launch lab above.\n\nYou are automatically logged in to your lab environment as data-ai\\student.\n\nYou can now begin your work on this lab.\n\n Tip\n\nTo dock the lab environment so that it fills the window, select the PC icon at the top and then select Fit Window to Machine.\n\nExercise story\n\nIn this exercise, you’ll create measures with DAX expressions involving filter context manipulation.\n\nIn this exercise you learn how to:\n\nUse the CALCULATE() function to manipulate filter context\nUse Time Intelligence functions\n\nThis exercise should take approximately 45 minutes.\n\n Note\n\nA limited number of concurrent sessions are available - if the hosted environment is unavailable, try again later.\n\nUse your own device\n\nAlternatively, configure your environment with the setup instructions.\n\nThen follow these exercise instructions to complete the exercise.\n\nNext unit: Check your knowledge\n\nContinue\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Use DAX time intelligence functions - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/2-functions",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nLearn  Training  Browse  Use DAX time intelligence functions in Power BI Desktop models \nAdd\nPrevious\nUnit 2 of 6\nNext\nUse DAX time intelligence functions\nCompleted\n100 XP\n5 minutes\n\nDAX includes several time intelligence functions to simplify the task of modifying date filter context. You could write many of these intelligence formulas by using a CALCULATE function that modifies date filters, but that would create more work.\n\n Note\n\nMany DAX time intelligence functions are concerned with standard date periods, specifically years, quarters, and months. If you have irregular time periods (for example, financial months that begin mid-way through the calendar month), or you need to work with weeks or time periods (hours, minutes, and so on), the DAX time intelligence functions won't be helpful. Instead, you'll need to use the CALCULATE function and pass in hand-crafted date or time filters.\n\nDate table requirement\n\nTo work with time intelligence DAX functions, you need to meet the prerequisite model requirement of having at least one date table in your model. A date table is a table that meets the following requirements:\n\nIt must have a column of data type Date (or date/time), known as the date column.\nThe date column must contain unique values.\nThe date column must not contain BLANKs.\nThe date column must not have any missing dates.\nThe date column must span full years. A year isn't necessarily a calendar year (January-December).\nThe date table must be indicated as a date table.\n\nFor more information, see Create date tables in Power BI Desktop.\n\nSummarizations over time\n\nOne group of DAX time intelligence functions is concerned with summarizations over time:\n\nDATESYTD - Returns a single-column table that contains dates for the year-to-date (YTD) in the current filter context. This group also includes the DATESMTD and DATESQTD DAX functions for month-to-date (MTD) and quarter-to-date (QTD). You can pass these functions as filters into the CALCULATE DAX function.\nTOTALYTD - Evaluates an expression for YTD in the current filter context. The equivalent QTD and MTD DAX functions of TOTALQTD and TOTALMTD are also included.\nDATESBETWEEN - Returns a table that contains a column of dates that begins with a given start date and continues until a given end date.\nDATESINPERIOD - Returns a table that contains a column of dates that begins with a given start date and continues for the specified number of intervals.\n\n Note\n\nWhile the TOTALYTD function is simple to use, you are limited to passing in one filter expression. If you need to apply multiple filter expressions, use the CALCULATE function and then pass the DATESYTD function in as one of the filter expressions.\n\nIn the following example, you will create your first time intelligence calculation that will use the TOTALYTD function. The syntax is as follows:\n\nDAX\nCopy\nTOTALYTD(<expression>, <dates>, [, <filter>][, <year_end_date>])\n\n\nThe function requires an expression and, as is common to all time intelligence functions, a reference to the date column of a marked date table. Optionally, a single filter expression or the year-end date can be passed in (required only when the year doesn't finish on December 31).\n\nDownload and open the Adventure Works DW 2020 M07.pbix file. Then, add the following measure definition to the Sales table that calculates YTD revenue. Format the measure as currency with two decimal places.\n\nDAX\nCopy\nRevenue YTD =\nTOTALYTD([Revenue], 'Date'[Date], \"6-30\")\n\n\nThe year-end date value of \"6-30\" represents June 30.\n\nOn Page 1 of the report, add the Revenue YTD measure to the matrix visual. Notice that it produces a summarization of the revenue amounts from the beginning of the year through to the filtered month.\n\nComparisons over time\n\nAnother group of DAX time intelligence functions is concerned with shifting time periods:\n\nDATEADD - Returns a table that contains a column of dates, shifted either forward or backward in time by the specified number of intervals from the dates in the current filter context.\nPARALLELPERIOD - Returns a table that contains a column of dates that represents a period that is parallel to the dates in the specified dates column, in the current filter context, with the dates shifted a number of intervals either forward in time or back in time.\nSAMEPERIODLASTYEAR - Returns a table that contains a column of dates that are shifted one year back in time from the dates in the specified dates column, in the current filter context.\nMany helper DAX functions for navigating backward or forward for specific time periods, all of which returns a table of dates. These helper functions include NEXTDAY, NEXTMONTH, NEXTQUARTER, NEXTYEAR, and PREVIOUSDAY, PREVIOUSMONTH, PREVIOUSQUARTER, and PREVIOUSYEAR.\n\nNow, you will add a measure to the Sales table that calculates revenue for the prior year by using the SAMEPERIODLASTYEAR function. Format the measure as currency with two decimal places.\n\nDAX\nCopy\nRevenue PY =\nVAR RevenuePriorYear = CALCULATE([Revenue], SAMEPERIODLASTYEAR('Date'[Date]))\nRETURN\n    RevenuePriorYear\n\n\nAdd the Revenue PY measure to the matrix visual. Notice that it produces results that are similar to the previous year's revenue amounts.\n\nNext, you will modify the measure by renaming it to Revenue YoY % and then updating the RETURN clause to calculate the change ratio. Be sure to change the format to a percentage with two decimals places.\n\nDAX\nCopy\nRevenue YoY % =\nVAR RevenuePriorYear = CALCULATE([Revenue], SAMEPERIODLASTYEAR('Date'[Date]))\nRETURN\n    DIVIDE(\n        [Revenue] - RevenuePriorYear,\n        RevenuePriorYear\n    )\n\n\nNotice that the Revenue YoY % measure produces a ratio of change factor over the previous year's monthly revenue. For example, July 2018 represents a 106.53 percent increase over the previous year's monthly revenue, and November 2018 represents a 24.22 percent decrease over the previous year's monthly revenue.\n\n Note\n\nThe Revenue YoY % measure demonstrates a good use of DAX variables. The measure improves the readability of the formula and allows you to unit test part of the measure logic (by returning the RevenuePriorYear variable value). Additionally, the measure is an optimal formula because it doesn't need to retrieve the prior year's revenue value twice. Having stored it once in a variable, the RETURN clause uses to the variable value twice.\n\nNext unit: Additional time intelligence calculations\n\nContinue\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Additional time intelligence calculations - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/3-calculations",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nLearn  Training  Browse  Use DAX time intelligence functions in Power BI Desktop models \nAdd\nPrevious\nUnit 3 of 6\nNext\nAdditional time intelligence calculations\nCompleted\n100 XP\n5 minutes\n\nOther DAX time intelligence functions exist that are concerned with returning a single date. You'll learn about these functions by applying them in two different scenarios.\n\nThe FIRSTDATE and the LASTDATE DAX functions return the first and last date in the current filter context for the specified column of dates.\n\nCalculate new occurrences\n\nAnother use of time intelligence functions is to count new occurrences. The following example shows how you can calculate the number of new customers for a time period. A new customer is counted in the time period in which they made their first purchase.\n\nYour first task is to add the following measure to the Sales table that counts the number of distinct customers life-to-date (LTD). Life-to-date means from the beginning of time until the last date in filter context. Format the measure as a whole number by using the thousands separator.\n\nDAX\nCopy\nCustomers LTD =\nVAR CustomersLTD =\n    CALCULATE(\n        DISTINCTCOUNT(Sales[CustomerKey]),\n        DATESBETWEEN(\n            'Date'[Date],\n            BLANK(),\n            MAX('Date'[Date])\n        ),\n        'Sales Order'[Channel] = \"Internet\"\n    )\nRETURN\n    CustomersLTD\n\n\nAdd the Customers LTD measure to the matrix visual. Notice that it produces a result of distinct customers LTD until the end of each month.\n\nThe DATESBETWEEN function returns a table that contains a column of dates that begins with a given start date and continues until a given end date. When the start date is BLANK, it will use the first date in the date column. (Conversely, when the end date is BLANK, it will use the last date in the date column.) In this case, the end date is determined by the MAX function, which returns the last date in filter context. Therefore, if the month of August 2017 is in filter context, then the MAX function will return August 31, 2017 and the DATESBETWEEN function will return all dates through to August 31, 2017.\n\nNext, you will modify the measure by renaming it to New Customers and by adding a second variable to store the count of distinct customers before the time period in filter context. The RETURN clause now subtracts this value from LTD customers to produce a result, which is the number of new customers in the time period.\n\nDAX\nCopy\nNew Customers =\nVAR CustomersLTD =\n    CALCULATE(\n        DISTINCTCOUNT(Sales[CustomerKey]),\n        DATESBETWEEN(\n            'Date'[Date],\n            BLANK(),\n            MAX('Date'[Date])\n        ),\n    'Sales Order'[Channel] = \"Internet\"\n    )\nVAR CustomersPrior =\n    CALCULATE(\n        DISTINCTCOUNT(Sales[CustomerKey]),\n        DATESBETWEEN(\n            'Date'[Date],\n            BLANK(),\n            MIN('Date'[Date]) - 1\n        ),\n        'Sales Order'[Channel] = \"Internet\"\n    )\nRETURN\n    CustomersLTD - CustomersPrior\n\n\nFor the CustomersPrior variable, notice that the DATESBETWEEN function includes dates until the first date in filter context minus one. Because Microsoft Power BI internally stores dates as numbers, you can add or subtract numbers to shift a date.\n\nSnapshot calculations\n\nOccasionally, fact data is stored as snapshots in time. Common examples include inventory stock levels or account balances. A snapshot of values is loaded into the table on a periodic basis.\n\nWhen summarizing snapshot values (like inventory stock levels), you can summarize values across any dimension except date. Adding stock level counts across product categories produces a meaningful summary, but adding stock level counts across dates does not. Adding yesterday's stock level to today's stock level isn't a useful operation to perform (unless you want to average that result).\n\nWhen you are summarizing snapshot tables, measure formulas can rely on DAX time intelligence functions to enforce a single date filter.\n\nIn the following example, you will explore a scenario for the Adventure Works company. Switch to model view and select the Inventory model diagram.\n\nNotice that the diagram shows three tables: Product, Date, and Inventory. The Inventory table stores snapshots of unit balances for each date and product. Importantly, the table contains no missing dates and no duplicate entries for any product on the same date. Also, the last snapshot record is stored for the date of June 15, 2020.\n\nNow, switch to report view and select Page 2 of the report. Add the UnitsBalance column of the Inventory table to the matrix visual. Its default summarization is set to sum values.\n\nThis visual configuration is an example of how not to summarize a snapshot value. Adding daily snapshot balances together doesn't produce a meaningful result. Therefore, remove the UnitsBalance field from the matrix visual.\n\nNow, you'll add a measure to the Inventory table that sums the UnitsBalance value for a single date. The date will be the last date of each time period. It's achieved by using the LASTDATE function. Format the measure as a whole number with the thousands separator.\n\nDAX\nCopy\nStock on Hand =\nCALCULATE(\n    SUM(Inventory[UnitsBalance]),\n    LASTDATE('Date'[Date])\n)\n\n\n Note\n\nNotice that the measure formula uses the SUM function. An aggregate function must be used (measures don't allow direct references to columns), but given that only one row exists for each product for each date, the SUM function will only operate over a single row.\n\nAdd the Stock on Hand measure to the matrix visual. The value for each product is now based on the last recorded units balance for each month.\n\nThe measure returns BLANKs for June 2020 because no record exists for the last date in June. According to the data, it hasn't happened yet.\n\nFiltering by the last date in filter context has inherent problems: A recorded date might not exist because it hasn't yet happened, or perhaps because stock balances aren't recorded on weekends.\n\nYour next step is to adjust the measure formula to determine the last date that has a non-BLANK result and then filter by that date. You can achieve this task by using the LASTNONBLANK DAX function.\n\nUse the following measure definition to modify the Stock on Hand measure.\n\nDAX\nCopy\nStock on Hand =\nCALCULATE(\n    SUM(Inventory[UnitsBalance]),\n    LASTNONBLANK(\n        'Date'[Date],\n        CALCULATE(SUM(Inventory[UnitsBalance]))\n    )\n)\n\n\nIn the matrix visual, notice the values for June 2020 and the total (representing the entire year).\n\nThe LASTNONBLANK function is an iterator function. It returns the last date that produces a non-BLANK result. It achieves this result by iterating through all dates in filter context in descending chronological order. (Conversely, the FIRSTNONBLANK iterates in ascending chronological order.) For each date, it evaluates the passed in expression. When it encounters a non-BLANK result, the function returns the date. That date is then used to filter the CALCULATE function.\n\n Note\n\nThe LASTNONBLANK function evaluates its expression in row context. The CALCULATE function must be used to transition the row context to filter context to correctly evaluate the expression.\n\nYou should now hide the Inventory table UnitsBalance column. It will prevent report authors from inappropriately summarizing snapshot unit balances.\n\nNext unit: Exercise - Create Advanced DAX Calculations in Power BI Desktop\n\nContinue\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Introduction - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/1-introduction",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nLearn  Training  Browse  Use DAX time intelligence functions in Power BI Desktop models \nAdd\nUnit 1 of 6\nNext\nIntroduction\nCompleted\n100 XP\n1 minute\n\nTime intelligence relates to calculations over time. Specifically, it relates to calculations over dates, months, quarters, or years, and possibly time. Rarely would you need to calculate over time in the sense of hours, minutes, or seconds.\n\nIn Data Analysis Expressions (DAX) calculations, time intelligence means modifying the filter context for date filters.\n\nFor example, at the Adventure Works company, their financial year begins on July 1 and ends on June 30 of the following year. They produce a table visual that displays monthly revenue and year-to-date (YTD) revenue.\n\nThe filter context for 2017 August contains each of the 31 dates of August, which are stored in the Date table. However, the calculated year-to-date revenue for 2017 August applies a different filter context. It's the first date of the year through to the last date in filter context. In this example, that's July 1, 2017 through to August 31, 2017.\n\nTime intelligence calculations modify date filter contexts. They can help you answer these time-related questions:\n\nWhat's the accumulation of revenue for the year, quarter, or month?\nWhat revenue was produced for the same period last year?\nWhat growth in revenue has been achieved over the same period last year?\nHow many new customers made their first order in each month?\nWhat's the inventory stock on-hand value for the company's products?\n\nThis module describes how to create time intelligence measures to answer these questions.\n\nNext unit: Use DAX time intelligence functions\n\nContinue\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Use DAX time intelligence functions in Power BI Desktop models - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/dax-power-bi-time-intelligence/",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nUse DAX time intelligence functions in Power BI Desktop models\nModule\n6 Units\nFeedback\nIntermediate\nData Analyst\nApp Maker\nPower BI\nMicrosoft Power Platform\n\nBy the end of this module, you'll learn the meaning of time intelligence and how to add time intelligence DAX calculations to your model.\n\nLearning objectives\n\nBy the end of this module, you'll be able to:\n\nDefine time intelligence.\nUse common DAX time intelligence functions.\nCreate useful intelligence calculations.\nAdd\nPrerequisites\n\nYou should have experience creating Microsoft Power BI Desktop models and designing Power BI report layouts. You should also understand how to create Data Analysis Expressions (DAX) measures and how to work with iterator functions and filter context.\n\nIntroduction\nmin\nUse DAX time intelligence functions\nmin\nAdditional time intelligence calculations\nmin\nExercise - Create Advanced DAX Calculations in Power BI Desktop\nmin\nCheck your knowledge\nmin\nSummary\nmin\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Summary - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-power-bi-model-relationships/7-summary",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nSummary\n3 minutes\n\nBy far, the most common model relationship is the one-to-many relationship. It fits with well with star schema design principals. Dimension tables are the “one” side, and your fact tables are the “many” side.\n\nOnce you gain mastery of model relationships and how to set them up, you’re on your way to develop more complex and efficient models. You can develop models with many-to-many relationships, and work with role-playing dimensions by activating inactive relationships.\n\nWhile you add relationships at model design time, model calculations can navigate relationships, modify relationship behavior, and even create virtual relationships.\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Exercise: Work with model relationships - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-power-bi-model-relationships/5a-exercise-work-model-relationships",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nLearn  Training  Browse  Create Power BI model relationships \nAdd\nPrevious\nUnit 6 of 8\nNext\nExercise: Work with model relationships\nCompleted\n100 XP\n45 minutes\n\n Loading lab...\n\n Note\n\nA virtual machine (VM) containing the client tools you need is provided, along with the exercise instructions. Use the button above to open the VM. A limited number of concurrent sessions are available - if the hosted environment is unavailable, try again later.\n\nWhen you finish the exercise, end the lab to close the VM. Don't forget to come back and complete the knowledge check to earn points for completing this module!\n\nNext unit: Knowledge check\n\nContinue\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Knowledge check - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-power-bi-model-relationships/6-knowledge-check",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nKnowledge check\n5 minutes\n\nChoose the best response for each of the questions below. Then select Check your answers.\n\nCheck your knowledge\n1. \n\nBelle is a data modeler at Adventure Works who is developing a model for a data warehouse. The model includes a table that stores products and another table that stores sales of those products. Belle adds a relationship to relate the two tables.\n\nWhich cardinality type should Belle set to achieve an optimal model?\n\n \n\nOne-to-one.\n\nOne-to-many.\n\nMany-to-many.\n\n2. \n\nAkira is a data modeler at Adventure Works who is developing a model for a data warehouse. The model includes a table that stores products and another table that stores sales monthly targets of product categories. Each product can belong to multiple categories and each category can have multiple products. Akira adds a relationship to relate the two tables.\n\nWhich cardinality type should Akira set to achieve an optimal model?\n\n \n\nOne-to-one.\n\nOne-to-many.\n\nMany-to-many.\n\n3. \n\nMargaret is a data modeler at Adventure Works who is adding a measure to sales model. When evaluated, the measure must filter by filters already applied to an unrelated table.\n\nWhich DAX function should Margaret use to create a virtual relationship?\n\n \n\nRELATEDTABLE.\n\nTREATAS.\n\nUSERELATIONSHIP\n\nCheck your answers\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Understand relationship evaluation - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-power-bi-model-relationships/5-understand-relationship-evaluation",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nLearn  Training  Browse  Create Power BI model relationships \nAdd\nPrevious\nUnit 5 of 8\nNext\nUnderstand relationship evaluation\nCompleted\n100 XP\n12 minutes\n\nModel relationships, from an evaluation perspective, are classified as either regular or limited. It's not a configurable relationship property. It’s inferred from the cardinality type and the data source of the two related tables. It's important to understand the evaluation type because there may be performance implications or consequences should data integrity be compromised. These implications and integrity consequences are described in this unit.\n\nFirst, some modeling theory is required to fully understand relationship evaluations.\n\nAn import or DirectQuery model sources all of its data from either the VertiPaq cache or the source database. In both instances, Power BI is able to determine that a \"one\" side of a relationship exists.\n\nA composite model, however, can comprise tables using different storage modes (import, DirectQuery, or dual), or multiple DirectQuery sources. Each source, including the VertiPaq cache of imported data, is considered to be a source group. Model relationships can then be classified as intra source group or inter/cross source group. An intra source group relationship is one that relates two tables within a source group, while an inter/cross source group relationship relates tables across two source groups. Relationships in import or DirectQuery models are always intra source group.\n\nHere's an example of a composite model.\n\nIn this example, the composite model consists of two source groups: a VertiPaq source group and a DirectQuery source group. The VertiPaq source group contains three tables, and the DirectQuery source group contains two tables. One cross source group relationship exists to relate a table in the VertiPaq source group to a table in the DirectQuery source group.\n\nRegular relationships\n\nA model relationship is regular when the query engine can determine the \"one\" side of relationship. It has confirmation that the \"one\" side column contains unique values. All one-to-many intra source group relationships are regular relationships.\n\nIn the following example, there are two regular relationships, both marked as R. Relationships include the one-to-many relationship contained within the VertiPaq source group, and the one-to-many relationship contained within the DirectQuery source group.\n\nFor import models, where all data is stored in the VertiPaq cache, Power BI creates a data structure for each regular relationship at data refresh time. The data structures consist of indexed mappings of all column-to-column values, and their purpose is to accelerate joining tables at query time.\n\nAt query time, regular relationships permit table expansion to happen. Table expansion results in the creation of a virtual table by including the native columns of the base table and then expanding into related tables. For import tables, table expansion is done in the query engine; for DirectQuery tables it’s done in the native query that’s sent to the source database (as long as the Assume referential integrity property isn't enabled). The query engine then acts upon the expanded table, applying filters and grouping by the values in the expanded table columns.\n\n Note\n\nInactive relationships are expanded also, even when the relationship isn't used by a calculation. Bi-directional relationships have no impact on table expansion.\n\nFor one-to-many relationships, table expansion takes place from the \"many\" to the \"one\" sides by using LEFT OUTER JOIN semantics. When a matching value from the \"many\" to the \"one\" side doesn't exist, a blank virtual row is added to the \"one\" side table. This behavior applies only to regular relationships, not to limited relationships.\n\nTable expansion also occurs for one-to-one intra source group relationships, but by using FULL OUTER JOIN semantics. This join type ensures that blank virtual rows are added on either side, when necessary.\n\nBlank virtual rows are effectively unknown members. Unknown members represent referential integrity violations where the \"many\" side value has no corresponding \"one\" side value. Ideally these blanks shouldn’t exist. They can be eliminated by cleansing or repairing the source data.\n\nHere’s how table expansion works with an animated example.\n\nIn this example, the model consists of three tables: Category, Product, and Sales. The Category table relates to the Product table with a one-to-many relationship, and the Product table relates to the Sales table with a one-to-many relationship. The Category table contains two rows, the Product table contains three rows, and the Sales tables contains five rows.\n\nThere are matching values on both sides of all relationships meaning that there aren’t any referential integrity violations. A query-time expanded table is revealed. The table consists of the columns from all three tables. It's effectively a denormalized perspective of the data contained in the three tables. A new row is added to the Sales table, and it has a production identifier value (9) that has no matching value in the Product table. It's a referential integrity violation. In the expanded table, the new row has (Blank) values for the Category and Product table columns.\n\nLimited relationships\n\nA model relationship is limited when there's no guaranteed \"one\" side. A limited relationship can happen for two reasons:\n\nThe relationship uses a many-to-many cardinality type (even if one or both columns contain unique values).\n\nThe relationship is cross source group (which can only ever be the case for composite models).\n\nIn the following example, there are two limited relationships, both marked as L. The two relationships include the many-to-many relationship contained within the VertiPaq source group, and the one-to-many cross source group relationship.\n\nFor import models, data structures are never created for limited relationships. In that case, Power BI resolves table joins at query time.\n\nTable expansion never occurs for limited relationships. Table joins are achieved by using INNER JOIN semantics, and for this reason, blank virtual rows aren’t added to compensate for referential integrity violations.\n\nThere are additional restrictions related to limited relationships:\n\nThe RELATED DAX function can't be used to retrieve the \"one\" side column values.\n\nEnforcing RLS has topology restrictions.\n\n Note\n\nIn Power BI Desktop model view, it's not always possible to determine whether a model relationship is regular or limited. A many-to-many relationship will always be limited, as will be a one-to-many relationship when it's a cross source group relationship. To determine whether it's a cross source group relationship, you'll need to inspect the table storage modes and data sources to arrive at the correct determination.\n\nPrecedence rules\n\nBi-directional relationships can introduce multiple, and therefore ambiguous, filter propagation paths between model tables. The following list presents precedence rules that Power BI uses for ambiguity detection and path resolution:\n\nMany-to-one and one-to-one relationships, including limited relationships\n\nMany-to-many relationships\n\nBi-directional relationships, in the reverse direction (that is, from the \"many\" side)\n\nPerformance preference\n\nThe following list orders filter propagation performance, from fastest to slowest performance:\n\nOne-to-many intra source group relationships\n\nMany-to-many model relationships achieved with an intermediary table and that involve at least one bi-directional relationship\n\nMany-to-many cardinality relationships\n\nCross source group relationships\n\nNext unit: Exercise: Work with model relationships\n\nContinue\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Set up relationships - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-power-bi-model-relationships/3-set-up-relationships",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nSet up relationships\n14 minutes\n\nA model relationship relates one column in a table to one column in a different table. (There's one specialized case where this requirement isn't true, and it applies only to multi-column relationships in DirectQuery models. This topic is described in the next unit.)\n\n Note\n\nIt's not possible to relate a column to a different column in the same table. This concept is sometimes confused with the ability to define a relational database foreign key constraint that’s table self-referencing. You can use this relational database concept to store parent-child relationships (for example, each employee record is related to a \"reports to\" employee). However, you can’t use model relationships to generate a model hierarchy based on this type of relationship. To create a parent-child hierarchy, see Parent and Child functions.\n\nSet relationship cardinality\n\nEach model relationship is defined by a cardinality type. There are four cardinality type options, representing the data characteristics of the \"from\" and \"to\" related columns. The \"one\" side means the column contains unique values; the \"many\" side means the column can contain duplicate values.\n\n Note\n\nIf a data refresh operation attempts to load duplicate values into a \"one\" side column, the entire data refresh will fail.\n\nThe four options, together with their shorthand notations, are described in the following bulleted list:\n\nOne-to-many (1:*)\n\nMany-to-one (*:1)\n\nOne-to-one (1:1)\n\nMany-to-many (:)\n\nWhen you create a relationship in Power BI Desktop, the designer automatically detects and sets the cardinality type. Power BI Desktop queries the model to know which columns contain unique values. For import models, it uses internal storage statistics; for DirectQuery models, it sends profiling queries to the data source.\n\nSometimes, however, Power BI Desktop can get it wrong. It can get it wrong when tables are yet to be loaded with data, or because columns that you expect to contain duplicate values currently contain unique values. In either case, you can update the cardinality type as long as any \"one\" side columns contain unique values (or the table is yet to be loaded with rows of data).\n\nOne-to-many (and many-to-one) cardinality\n\nThe one-to-many and many-to-one cardinality options are the same, and they're also the most common cardinality types.\n\nWhen configuring a one-to-many or many-to-one relationship, you'll choose the one that matches the order in which you related the columns. Consider how you would configure the relationship from the Product table to the Sales table by using the ProductID column found in each table. The cardinality type would be one-to-many, as the ProductID column in the Product table contains unique values. If you related the tables in the reverse direction, Sales to Product, then the cardinality would be many-to-one.\n\nOne-to-one cardinality\n\nA one-to-one relationship means both columns contain unique values. This cardinality type isn't common, and it likely represents a suboptimal model design because of the storage of redundant data. It’s often a better idea to use Power Query to consolidate the two tables into one.\n\nFor more information on using this cardinality type, see One-to-one relationship guidance.\n\nMany-to-many cardinality\n\nA many-to-many relationship means both columns can contain duplicate values. This cardinality type is infrequently used. It's typically useful when designing complex model requirements. You can use it to relate many-to-many facts or to relate higher grain facts. For example, when sales target facts are stored at product category level and the product dimension table is stored at product level.\n\nFor guidance on using this cardinality type, see Many-to-many relationship guidance.\n\n Tip\n\nIn Power BI Desktop model view, you can interpret a relationship's cardinality type by looking at the indicators (1 or *) on either side of the relationship line. To determine which columns are related, you'll need to select, or hover the cursor over, the relationship line to highlight the related columns.\n\nSet cross filter direction\n\nEach model relationship is defined with a cross filter direction. Your setting determines the direction(s) that filters will propagate. The possible cross filter options are dependent on the cardinality type.\n\nExpand table\nCardinality type\tCross filter options\nOne-to-many (or many-to-one)\tSingle\nBoth\nOne-to-one\tBoth\nMany-to-many\tSingle (Table1 to Table2)\nSingle (Table2 to Table1)\nBoth\n\nSingle cross filter direction means \"single direction\", and Both means \"both directions\". A relationship that filters in both directions is commonly described as bi-directional.\n\nFor one-to-many relationships, the cross filter direction is always from the \"one\" side, and optionally from the \"many\" side (bi-directional). For one-to-one relationships, the cross filter direction is always from both tables. Lastly, for many-to-many relationships, cross filter direction can be from either one of the tables, or from both tables. Notice that when the cardinality type includes a \"one\" side, that filters will always propagate from that side.\n\nWhen the cross filter direction is set to Both, an additional property becomes available. It can apply bi-directional filtering when Power BI enforces row-level security (RLS) rules. For more information about RLS, see the Row-level security (RLS) with Power BI Desktop article.\n\nYou can modify the relationship cross filter direction, including the disabling of filter propagation, by using a model calculation. It's achieved by using the CROSSFILTER DAX function, which is described in Unit 3.\n\nBear in mind that bi-directional relationships can impact negatively on performance. Further, attempting to configure a bi-directional relationship could result in ambiguous filter propagation paths. In this case, Power BI Desktop may fail to commit the relationship change and will alert you with an error message. Sometimes, however, Power BI Desktop may allow you to define ambiguous relationship paths between tables. Precedence rules that affect ambiguity detection and path resolution are described in Unit 4.\n\nWe recommend using bi-directional filtering only as needed. For more information, see Bi-directional relationship guidance.\n\n Tip\n\nIn Power BI Desktop model view, you can interpret a relationship's cross filter direction by noticing the arrowhead(s) along the relationship line. A single arrowhead represents a single-direction filter in the direction of the arrowhead; a double arrowhead represents a bi-directional relationship.\n\nSet active vs inactive relationships\n\nThere can only be one active filter propagation path between two model tables. However, it's possible to introduce additional relationship paths, though you must set these relationships as inactive. Inactive relationships can only be made active during the evaluation of a model calculation. It’s achieved by using the USERELATIONSHIP DAX function, which is described in Unit 3.\n\nGenerally, we recommend defining active relationships whenever possible. They widen the scope and potential of how report authors can use your model. Using only active relationships means that role-playing dimension tables should be duplicated in your model.\n\nIn specific circumstances, however, you can define one or more inactive relationships for a role-playing dimension table. You can consider this design when:\n\nThere's no requirement for report visuals to simultaneously filter by different roles.\n\nYou use the USERELATIONSHIP DAX function to activate a specific relationship for relevant model calculations.\n\nFor more information, see Active vs inactive relationship guidance.\n\n Tip\n\nIn Power BI Desktop model view, you can interpret a relationship's active vs inactive status. An active relationship is represented by a solid line; an inactive relationship is represented as a dashed line.\n\nSet assume referential integrity\n\nThe Assume referential integrity property is available only for one-to-many and one-to-one relationships between two DirectQuery storage mode tables that belong to the same source group. You can only enable this property when the “many” side column doesn’t contain NULLs.\n\nWhen enabled, native queries sent to the data source will join the two tables together by using an INNER JOIN rather than an OUTER JOIN. Generally, enabling this property improves query performance, though it does depend on the specifics of the data source.\n\nAlways enable this property when a single-column database foreign key constraint exists between the two tables. Even when a foreign key constraint doesn't exist, consider enabling the property as long as you're certain data integrity exists.\n\n Important\n\nIf data integrity should become compromised, the inner join will eliminate unmatched rows between the tables. For example, consider a model Sales table with a ProductID column value that didn’t exist in the related Product table. Filter propagation from the Product table to the Sales table will eliminate sales rows for unknown products. This would result in an understatement of the sales results.\n\nFor more information, see Assume referential integrity settings in Power BI Desktop.\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Use DAX relationship functions - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-power-bi-model-relationships/4-use-dax-relationship-functions",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nUse DAX relationship functions\n3 minutes\n\nThere are several DAX functions that are relevant to model relationships.\n\nRELATED\n\nThe RELATED function retrieves the value from \"one\" side of a relationship. It’s useful when involving calculations from different tables that are evaluated in row context.\n\n Tip\n\nTo learn more about row context, work through the Add calculated tables and columns to Power BI Desktop models module. While this module describes adding model calculations, it includes a unit that introduces and describes row context.\n\nRELATEDTABLE\n\nThe RELATEDTABLE function retrieves a table of rows from the \"many\" side of a relationship.\n\nUSERELATIONSHIP\n\nThe USERELATIONSHIP function forces the use of a specific inactive model relationship. It’s useful when your model includes a role-playing dimension table, and you choose to create inactive relationships from this table.\n\nFor more information, see Active vs inactive relationship guidance.\n\nCROSSFILTER\n\nThe CROSSFILTER function either modifies the relationship cross filter direction (to one or both), or it disables filter propagation (none). It’s useful when you need to change or ignore model relationships during the evaluation of a specific calculation.\n\nCOMBINEVALUES\n\nThe COMBINEVALUES function joins two or more text strings into one text string. The purpose of this function is to support multi-column relationships in DirectQuery models when tables belong to the same source group.\n\nTREATAS\n\nThe TREATAS function applies the result of a table expression as filters to columns from an unrelated table. It’s helpful in advanced scenarios when you want to create a virtual relationship during the evaluation of a specific calculation.\n\nParent and child functions\n\nThe Parent and child functions are a family of related functions that you can use to generate calculated columns to naturalize a parent-child hierarchy. You can then use these columns to create a fixed-level hierarchy.\n\nFor more information, see Understanding functions for parent-child hierarchies in DAX.\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Understand model relationships - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-power-bi-model-relationships/2-understand-model-relationships",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nLearn  Training  Browse  Create Power BI model relationships \nAdd\nPrevious\nUnit 2 of 8\nNext\nUnderstand model relationships\nCompleted\n100 XP\n6 minutes\n\nA model relationship propagates filters applied on the column of one model table to a different model table. Filters will propagate so long as there's a relationship path to follow, which can involve propagation to multiple tables.\n\nRelationship paths are deterministic, meaning that filters are always propagated in the same way and without random variation. Relationships can, however, be disabled, or have filter context modified by model calculations that use particular DAX functions. Use DAX relationship functions are described in Unit 2.\n\n Important\n\nModel relationships don’t enforce data integrity. Unit 4, which describes relationship evaluation, explains how model relationships behave when there are data integrity issues with your data.\n\nHere's how relationships propagate filters with an animated example.\n\nIn this example, the model consists of four tables: Category, Product, Year, and Sales. The Category table relates to the Product table, and the Product table relates to the Sales table. The Year table also relates to the Sales table. All relationships are one-to-many (the details of which are described in the next unit).\n\nA query, possibly generated by a Power BI card visual, requests the total sales quantity for sales orders made for a single category, Cat-A, and for a single year, CY2018. It's why you can see filters applied on the Category and Year tables. The filter on the Category table propagates to the Product table to isolate two products that are assigned to the category Cat-A. Then the Product table filters propagate to the Sales table to isolate just two sales rows for these products. These two sales rows represent the sales of products assigned to category Cat-A. Their combined quantity is 14 units. At the same time, the Year table filter propagates to further filter the Sales table, resulting in just the one sales row that is for products assigned to category Cat-A and that was ordered in year CY2018. The quantity value returned by the query is 11 units. Note that when multiple filters are applied to a table (like the Sales table in this example), it's always an AND operation, requiring that all conditions must be true.\n\nApply star schema design principles\n\nWe recommend you apply star schema design principles to produce a model comprising dimension and fact tables. It’s common to set up Power BI to enforce rules that filter dimension tables, allowing model relationships to efficiently propagate those filters to fact tables.\n\nThe following image is the model diagram of the Adventure Works sales analysis data model. It shows a star schema design comprising a single fact table named Sales. The other four tables are dimension tables that support the analysis of sales measures by date, state, region, and product. Notice the model relationships connecting all tables. These relationships propagate filters (directly or indirectly) to the Sales table.\n\nUse disconnected tables\n\nIt's unusual that a model table isn't related to another model table. Such a table in a valid model design is described as a disconnected table. A disconnected table isn't intended to propagate filters to other model tables. Instead, it accepts \"user input\" (perhaps with a slicer visual), allowing model calculations to use the input value in a meaningful way. For example, consider a disconnected table that’s loaded with a range of currency exchange rate values. As long as a filter is applied to filter by a single rate value, a measure expression can use that value to convert sales values.\n\nThe Power BI Desktop what-if parameter is a feature that creates a disconnected table. For more information, see Create and use a What if parameter to visualize variables in Power BI Desktop.\n\nNext unit: Set up relationships\n\nContinue\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Introduction - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-power-bi-model-relationships/1-introduction",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nIntroduction\n2 minutes\n\nTogether with model tables, model relationships form the basis of a tabular model. Relationships are responsible for the propagation of filters to other model tables. When correctly set up, they silently work to provide a natural and intuitive querying experience.\n\nThere’s a lot to learn about relationships, and it can take new developers time to understand how to set them up correctly, especially for complex data relationships. There are also Data Analysis Expressions (DAX) functions that work with model relationships. These functions allow your model calculation to navigate relationships, modify relationship behavior, and even create virtual relationships.\n\nLearning objectives\n\nBy the end of this module, you’ll be able to:\n\nUnderstand how model relationship work.\nSet up relationships.\nUse DAX relationship functions.\nUnderstand relationship evaluation.\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Create Power BI model relationships - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-power-bi-model-relationships/",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nCreate Power BI model relationships\nModule\n8 Units\nFeedback\nIntermediate\nData Analyst\nPower BI\n\nPower BI model relationships form the basis of a tabular model. Define Power BI model relationships, set up relationships, recognize DAX relationship functions, and describe relationship evaluation.\n\nLearning objectives\n\nBy the end of this module, you’ll be able to:\n\nUnderstand how model relationship work.\nSet up relationships.\nUse DAX relationship functions.\nUnderstand relationship evaluation.\nAdd\nPrerequisites\nExperience developing Power BI data models by using Power BI Desktop.\nIntroduction\nmin\nUnderstand model relationships\nmin\nSet up relationships\nmin\nUse DAX relationship functions\nmin\nUnderstand relationship evaluation\nmin\nExercise: Work with model relationships\nmin\nKnowledge check\nmin\nSummary\nmin\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Summary - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-manage-scalable-power-bi-dataflows/7-summary",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nSummary\n3 minutes\n\nPower BI dataflows are an enterprise-focused data prep solution, enabling an ecosystem of data that's ready for consumption, reuse, and integration. Power BI dataflows work well for analysts who want to cleanse and transform data one time in Power Query online for reuse in other reports and by other analysts. They're also a great solution to reduce the load placed on source systems to extract data.\n\nLearn more\nAzure Data Factory wrangling overview\nUnderstanding the differences between dataflow types\nDeveloping dataflows solutions\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Knowledge check - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-manage-scalable-power-bi-dataflows/6-knowledge-check",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nKnowledge check\n5 minutes\n\nChoose the best response for each of the questions below. Then select Check your answers.\n\nCheck your knowledge\n1. \n\nIvor is working on an analytics solution that requires ETL logic to be applied to a table that sits outside of the data warehouse. Multiple analysts need to use this supplemental cleaned data in their reports, and it's important that all reports reflect the exact version of the cleansed data. Analysts don't have access to the data source. What should Ivor do to provide analysts with this data at the lowest access level necessary?\n\n \n\nCreate a Power BI dataset in a shared workspace and give all analysts contributor access.\n\nCreate a Power BI dataflow in a shared workspace and give all analysts viewer access.\n\nCreate a Power BI dataflow in a shared workspace and give all analysts admin access.\n\n2. \n\nSherry is using a dataflow in Power BI Premium to refresh data from a web API. The volume of data is large and Sherry is using incremental refresh. Sherry notices that the dataflow refresh is suddenly taking much longer than it used to. Where can she check dataflow performance and investigate what might be going on?\n\n \n\nThe refresh history in the dataflow settings.\n\nThe performance analyzer in Power BI desktop.\n\nThe performance profiler in Visual Studio.\n\n3. \n\nJuliane is creating a dataset to be used in multiple reports. To avoid duplicating logic, she wants to create a dataflow that references an existing dataflow. What requirement does Juliane need to confirm prior to creating her dataflow that contains the linked entity?\n\n \n\nJuliane must have access to both of the underlying data sources.\n\nThe workspace where the dataflow resides must be in Premium capacity.\n\nBoth dataflows must reside in the same workspace.\n\nCheck your answers\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Exercise: Create a dataflow - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-manage-scalable-power-bi-dataflows/5-exercise-create-dataflow",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nExercise: Create a dataflow\n45 minutes\n\nNow it's your opportunity to create a dataflow yourself.\n\nIn this exercise, you'll use a provided script to provision an Azure Synapse Analytics workspace in your Azure subscription. You'll then create a dataflow to deliver date dimension data sourced from the Azure Synapse Adventure Works data warehouse. The dataflow will provide a consistent definition of date-related data for use by the organization's business analysts.\n\n Note\n\nTo complete this lab, you will need both an Azure subscription in which you have administrative access and a Power BI account. If you need a free trial Power BI account, sign up and follow the steps to create an account before continuing with this lab.\n\nLaunch the exercise and follow the instructions.\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Create reusable assets - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-manage-scalable-power-bi-dataflows/3-create-reusable-assets",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nLearn  Training  Browse  Prepare data for tabular models in Power BI  Create and manage scalable Power BI dataflows \nAdd\nPrevious\nUnit 3 of 7\nNext\nCreate reusable assets\nCompleted\n100 XP\n5 minutes\n\nDataflows are created and refreshed in the Power BI service, and can be consumed in either Power BI desktop or the Power BI service.\n\nCreate a dataflow\n\nThere are multiple methods of creating dataflows in the Power BI service. We're going to cover creating a dataflow using the option to define new tables.\n\nYou can also create dataflows using linked tables, a computed table, or using import/export. Refer to the Power BI documentation for step-by-step instructions of each creation option.\n\nFrom within a shared workspace, select New Dataflow.\n\nHere you'll have the option to define new tables, link tables from other dataflows, import model, or attach a Common Data Model folder. Select Add new tables.\n\nSelecting Add new tables will direct you to Power Query online, where you'll choose a data source.\n\nDepending on the data source you select, you'll need to enter connection settings and specify connection credentials. Specifying connection credentials will look similar to data connections using Power Query in Power BI desktop.\n\nEnter the appropriate connection settings and credentials and select Sign In.\n\nAfter signing in, you'll get a preview of the assets in the source data system. Here you can select which tables to use. Dataflows contain tables, but don't contain relationships.\n\nOnce you select the data you'd like to use, you can use the dataflow editor to shape and transform that data. The dataflow editor looks and behaves similar to Power Query in Power BI desktop.\n\n Important\n\nDataflows can only be created in shared workspaces.\n\nRefresh a dataflow\n\nWhen you create a dataflow, you're prompted to refresh the data for the dataflow. Refreshing a dataflow is required before it can be consumed in a dataset inside Power BI Desktop, or referenced as a linked or computed table.\n\nTo configure a dataflow refresh from the shared workspace, navigate to Settings via the More options menu.\n\nHere you can take ownership of a dataflow, edit the data source credentials, schedule a refresh, configure enhanced compute engine settings, and endorse content.\n\nConnect to a dataflow\n\nDataflows can be consumed in three ways. Report builders can:\n\nCreate a linked table from the dataflow.\nCreate a dataset from the dataflow.\nCreate a connection from external tools that can read from the common data model format.\n\nYou can connect to a dataflow in Power BI desktop using the Power BI dataflows connector in the Get Data window.\n\n Note\n\nLearn more about configuring and consuming dataflows.\n\nRefining dataflow settings\n\nFor dataflows in workspaces using Power BI Premium capacity, you can use the Admin portal to change, or refine, how dataflows are created and how they use resources in your Power BI Premium subscription. See refining dataflow settings to learn more.\n\nNext unit: Implement best practices\n\nContinue\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Implement best practices - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-manage-scalable-power-bi-dataflows/4-implement-best-practices",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nImplement best practices\n3 minutes\n\nDataflows can solve problems, but they can also create problems when implemented suboptimally.\n\nBest practices\n\nKeep the following best practices in mind when planning your dataflow implementation:\n\nBring in only data you need.\nLeverage query folding.\nEndorse your dataflows as either promoted or certified to encourage use.\nUse incremental refresh to control partition processing.\nUse Power Automate for trigger-based dataflow and dataset refresh.\nReview and optimize dataflow refresh using refresh history and the CSV log.\nUse dataflows in Power BI Premium to take advantage of:\nEnhanced compute engine.\nDirectQuery.\nComputed entities.\nLinked entities.\nIncremental refresh.\nSplit things into multiple dataflows and reuse dataflows cross multiple workspaces.\n\n Tip\n\nFor more detailed information, see Dataflow best practices.\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  },
  {
    "title": "Introduction - Training | Microsoft Learn",
    "url": "https://learn.microsoft.com/en-us/training/modules/create-manage-scalable-power-bi-dataflows/1-introduction",
    "html": "Skip to main content\n\tWe use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking “Manage Cookies” at the bottom of the page. Privacy Statement Third-Party Cookies\nAccept Reject Manage cookies\nLearn\nDocumentation\nTraining\nCredentials\nQ&A\nCode Samples\nAssessments\nShows\nSign in\nTraining\nProducts\nCareer Paths\nBrowse all training\nEducator Center\nStudent Hub\nFAQ & Help\nAdd\nIntroduction\n2 minutes\n\nDataflows in Power BI enable standardized data preparation at a level in between the data source and Power BI reports. They're a great option in both self-service and enterprise analytics, enabling analysts to build reports on a single version of transformed data.\n\nThis module introduces Power BI dataflows, their use cases, and best practices in dataflow implementation. You'll also practice building a dataflow for use in a Power BI report.\n\nLearning objectives\n\nIn this module, you will:\n\nDescribe Power BI dataflows and use cases.\nDescribe best practices for implementing Power BI dataflows.\nCreate and consume Power BI dataflows.\n\nNeed help? See our troubleshooting guide or provide specific feedback by reporting an issue.\n\nFeedback\n\nWas this page helpful?\n\nYes\nNo\nEnglish (United States)\nYour Privacy Choices\nTheme\nManage cookies\nPrevious Versions\nBlog\nContribute\nPrivacy\nTerms of Use\nTrademarks\n© Microsoft 2023"
  }
]