import { ListDictionary } from './list_dictionary';
export interface LruCacheOptions {
    maxLength: number;
}
/**
 * Least recently used cache.
 */
export declare class LruCache<T = any> {
    private options;
    listDictionary: ListDictionary<T>;
    maxLength: number;
    constructor(options: LruCacheOptions);
    /**
     * Gets the number of item in the list.
     */
    length(): number;
    /**
     * Get item from Cache and move to last position
     */
    get(key: string): T | null;
    /**
     * Add new item to cache, remove least used item if length exceeds maxLength
     */
    add(key: string, value: T): boolean;
    /**
     * Remove item with key
     */
    remove(key: string): T | null;
    /**
     * Clear cache
     */
    clear(): void;
}
