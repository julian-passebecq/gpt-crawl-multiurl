import { LogFormat } from './log_consts';
/**
 * Ensures a string is shorter than a specified number of character, and truncates it if not, appending a specific suffix to it.
 * (copied from utilities package so logger do not have to depend on all of its dependencies)
 */
export declare function truncate(str: string, maxLength: number, suffix?: string): string;
/**
 * Gets log level from env variable. Both integers and strings (WARNING) are supported.
 */
export declare function getLevelFromEnv(): number;
/**
 * Gets log format from env variable. Currently, values 'JSON' and 'TEXT' are supported.
 * Defaults to 'TEXT' if no value is specified.
 */
export declare function getFormatFromEnv(): LogFormat;
/**
 * Limits given object to given depth and escapes function with [function] string.
 *
 * ie. Replaces object's content by '[object]' and array's content
 * by '[array]' when the value is nested more than given limit.
 */
export declare function limitDepth<T>(record: T, depth: number, maxStringLength?: number): T | undefined;
